kind: Template
apiVersion: v1
metadata:
  annotations:
    description: Build template for a nodejs server.
    tags: nodejs
    iconClass: icon-nodejs
  name: ${NAME}-build-template
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
    spec:
      source:
        type: Git
        git:
          uri: ${GIT_REPO_URL}
          ref: ${GIT_REF}
        contextDir: ${SOURCE_CONTEXT_DIR}
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ${SOURCE_IMAGE_KIND}
            name: ${SOURCE_IMAGE_NAME}:${SOURCE_IMAGE_TAG}
          env: []
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:${OUTPUT_IMAGE_TAG}
      resources:
        requests:
          cpu: ${CPU_REQUEST}
          memory: ${MEMORY_REQUEST}
        limits:
          cpu: ${CPU_LIMIT}
          memory: ${MEMORY_LIMIT}
      triggers:
        - type: ConfigChange
  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: pods-to-external-network
      labels:
        name: pods-to-external-network
        env: ${ENV_NAME}
    spec:
      description: 'Allow the builds to access the internet.

        This only needs to be specified once per environment.

        '
      source:
        - - $namespace=${NAMESPACE_NAME}-${ENV_NAME}
      destination:
        - - ext:network=any
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the objects defined in this template.  You
      should keep this as default unless your know what your doing.
    required: true
    value: dsc-chat-server
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: dsc-chat
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: dsc-chat-runtime
  - name: NAMESPACE_NAME
    displayName: Namespace Name
    description: The name of the namespace being deployed to..
    required: true
    value: a99fd4
  - name: ENV_NAME
    displayName: Environment Name
    description: Environment name.  For the build environment this will typically
      be 'tools'
    required: true
    value: tools
  - name: GIT_REPO_URL
    displayName: Git Repo URL
    description: The URL to your GIT repo, don't use the this default unless your
      just experimenting.
    required: true
    value: https://github.com/bcgov/issuer-kit-demo-verifier-chat.git
  - name: GIT_REF
    displayName: Git Reference
    description: The git reference or branch.
    required: true
    value: main
  - name: SOURCE_CONTEXT_DIR
    displayName: Source Context Directory
    description: The source context directory.
    required: true
    value: chat-server
  - name: SOURCE_IMAGE_KIND
    displayName: Source Image Kind
    required: true
    description: The 'kind' (type) of the  source image; typically ImageStreamTag,
      or DockerImage.
    value: DockerImage
  - name: SOURCE_IMAGE_NAME
    displayName: Source Image Name
    required: true
    description: The name of the source image.
    value: registry.access.redhat.com/ubi8/nodejs-12
  - name: SOURCE_IMAGE_TAG
    displayName: Source Image Tag
    required: true
    description: The tag of the source image.
    value: latest
  - name: OUTPUT_IMAGE_TAG
    displayName: Output Image Tag
    description: The tag given to the built image.
    required: true
    value: latest
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: '1'
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 4Gi
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 2Gi
